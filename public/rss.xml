<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>youkwhd's blog posts</title>
        <link>https://youkwhd.vercel.app</link>
        <description>an archive consist of articles from youkwhd's site</description>
        <lastBuildDate>Tue, 22 Mar 2022 13:14:36 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>en</language>
        <copyright>All rights reserved 2022, youkwhd</copyright>
        <item>
            <title><![CDATA[Rethink before implementing a feature]]></title>
            <link>https://youkwhd.vercel.app/blog/rethink-before-implementing-a-feature</link>
            <guid>https://youkwhd.vercel.app/blog/rethink-before-implementing-a-feature</guid>
            <pubDate>Mon, 21 Mar 2022 03:21:43 GMT</pubDate>
            <description><![CDATA[A bad habit i have is that i always rush when developing my projects. I felt like time is ticking faster when i do my works, thus that makes make me uncautious to small things to consider.]]></description>
            <content:encoded><![CDATA[<p>A bad habit i have is that i always rush when developing my projects. I felt like time is ticking faster when i do my works, thus that makes make me uncautious to small things to consider.</p>
<h2 id="table-of-contents">Table of contents</h2>
<ul>
<li><a href="#the-pull-request-i-made-on-github">The pull request i made on github</a></li>
<li><a href="#dont-think-twice-just-go-for-it">Don't think twice, just go for it.</a></li>
</ul>
<h2 id="the-pull-request-i-made-on-github">The pull request i made on github</h2>
<p>At first glance, i intended to fix an error on the site <a href="https://glfmn.io">glfmn.io</a>, glad it was on github, the problem was with it's HTTP 404 not found page, for more information, you can find the <a href="https://github.com/glfmn/glfmn.io/pull/4">pull request</a> archive here. Then an idea came into my mind, it was to add a new feature, a vim-like bindings, simply because the site was using Gruvbox as a color scheme, plus it's design looks like a terminal, am i right? üßê</p>
<p>It might be <strong>bad</strong> for the ecosystem. What i mean by that is, there's web browser extensions for such feature, like: <a href="https://vimium.github.io/">Vivium</a> &#x26; <a href="https://ueokande.github.io/vim-vixen/">Vim Vixen</a>, and i myself is using it right now. With that known, the bindings should be the same, as they the extensions are also following vim bindings, thus could make things feel a bit clunky, bindings are being overwritten either by the extension or the site.</p>
<p>Well, it's bad right? or is it? only if the bindings aren't getting overwritten.</p>
<h2 id="dont-think-twice-just-go-for-it">Don't think twice, just go for it.</h2>
<p>While there is some bad affection, not all applications will get affected by independent feature. Taken an example of vim-bindings, some applications have those integrated. Because it is a standalone app, it shouldn't make any problem, e.g. <a href="https://github.com/goballooning/vim-live-latex-preview">vim-live-latex-preview</a>, <a href="https://en.wikipedia.org/wiki/Zathura_(document_viewer)">zathura</a>, <a href="https://www.notabug.org/g0tsu/litemdview">litemdview</a>, etc.</p>]]></content:encoded>
            <author>lolywk@tutanota.com (youkwhd)</author>
        </item>
        <item>
            <title><![CDATA[Choosing the right tools]]></title>
            <link>https://youkwhd.vercel.app/blog/choosing-the-right-tools</link>
            <guid>https://youkwhd.vercel.app/blog/choosing-the-right-tools</guid>
            <pubDate>Sat, 19 Mar 2022 09:22:24 GMT</pubDate>
            <description><![CDATA[Sometimes, the tool that you are going to use is not the best solution for the current project that you're building. It is okay to reproduce other people's projects with your preferenced tools, such as the programming language itself. Here are some examples of choosing the right tools.]]></description>
            <content:encoded><![CDATA[<p>Sometimes, the tool that you are going to use is not the best solution for the current project that you're building. It is okay to reproduce other people's projects with your preferenced tools, such as the programming language itself. It's a good way to learn, that makes you more comfortable with your current knowledge, but still, always learn the fundamentals, not the tool you're using.</p>
<h2 id="table-of-contents">Table of contents</h2>
<ul>
<li>
<p><a href="#an-example-of-two-different-softwares">An example of two different softwares</a></p>
<ul>
<li><a href="#the-tools-each-software-uses">The tools each software uses</a></li>
</ul>
</li>
<li>
<p><a href="#another-example-when-developing-websites">Another example when developing websites</a></p>
</li>
<li>
<p><a href="#conclusion">Conclusion</a></p>
</li>
</ul>
<h2 id="an-example-of-two-different-softwares">An example of two different softwares</h2>
<p>Before i wrote this article, i was looking for a software that plays a certain sound after you click a key on your keyboard, so then i can make my keyboard sounds like a mechanical keyboard. I found two softwares that's capable of doing it, those are <a href="https://github.com/hainguyents13/mechvibes">Mechvibes</a> and <a href="https://github.com/zevv/bucklespring">Bucklespring</a>, between those two, Mechvibes is the most popular one in general, i guess it's because the software is easy to install on Windows. But Bucklespring has a higher rate of stars on Github.</p>
<h3 id="the-tools-each-software-uses">The tools each software uses</h3>
<p>Mechvibes however uses JavaScript as the main programming language. And it's an Electron app, wow. The performance is.. not quite good. I even have some issues when using Mechvibes, it sometimes delays after idling away from your keyboard. And just like other Electron apps, it ate a lot of my CPU.</p>
<blockquote>
<p>Electron bundles Chromium, for displaying UI</p>
</blockquote>
<p>On the other side, Bucklespring uses C as the main programming language. And it's a good choice knowing that this kind of software needs to communicate to your keyboard, or atleast listening for keyboard presses. The result is, it doesn't burn my CPU usage, and between these two, Bucklespring has the tiniest size, around 5.4 MB, while Mechvibes's size is sitting at around 60 - 80MB (executeables), this should be Electron's problem. But still, it's around 11 times bigger than the size of Bucklespring.</p>
<h2 id="another-example-when-developing-websites">Another example when developing websites</h2>
<p>WebAssembly is fast, now i'm free from JavaScript!! Go is faster than TypeScript, bye Node.js! well, not quite. Why not use Go as the backend language and TypeScript for the frontend? everything has their own drawbacks and advantages.. bla, bla, bla, i know you've heard that shit over and over.</p>
<p>As i said before, in my opinion, it is okay to build your projects with the tech stacks that you prefer. Especially when you're just getting started. It's best to just keep things simple, one programming language while learning the fundamentals, build up your problem solving skills, not for remembering syntaxes, not the programming language, that's that. Go has concurrency: goroutines, channels, mutex, etc. And it is the go-to language for making the backend and can perform faster than TypeScript. I do agree if someone recommends Go over TypeScript.</p>
<p>When making a small scale applications, you can use TypeScript on both frontend and backend (as if you're solo). It can boost your development environment. And it's community is wide. The ecosystem on TypeScript is also greater than Go's.</p>
<h2 id="conclusion">Conclusion</h2>
<p>Bucklespring is more efficient than Mechvibes, Go is better for the backend part. But that doesn't force you to only create applications with certain tool. Therefore, those are some examples of choosing the right tool for the right job. Use the one that suits your situation.</p>
<p>Happy hacking.</p>]]></content:encoded>
            <author>lolywk@tutanota.com (youkwhd)</author>
        </item>
        <item>
            <title><![CDATA[The future of this blog]]></title>
            <link>https://youkwhd.vercel.app/blog/the-future-of-this-blog</link>
            <guid>https://youkwhd.vercel.app/blog/the-future-of-this-blog</guid>
            <pubDate>Wed, 09 Mar 2022 04:11:27 GMT</pubDate>
            <description><![CDATA[I wanted to change up the technologies that i've used on this blog. Something just doesn't feel as rewarding if i myself didn't build this site from scratch, i might just consider making a new one from scratch and make use of bash scripting or make my own simple static site generator using the holy C that supports markdown.]]></description>
            <content:encoded><![CDATA[<p>This very site was first made with <a href="https://www.gatsbyjs.com">Gatsby</a>, and now it's build on top of <a href="https://nextjs.org">Next.js</a> ‚Äî pure static HTML + CSS page, no javascript included. I wanted to change up the technologies that i've used on this blog. Something just doesn't feel as rewarding if i myself didn't build this site from scratch, i might just consider making a new one from scratch and make use of bash scripting or make my own simple static site generator using the holy C that supports markdown, including all the third party packages. Or this "plan" will be my side project. Considering i need more knowledge on Typescript for web development, more preferably Javascript itself.</p>
<h2 id="table-of-contents">Table of contents</h2>
<ul>
<li>
<p><a href="#over-engineering-things">Over engineering things</a></p>
<ul>
<li><a href="#working-with-posts-tags">Working with posts tags</a></li>
<li><a href="#the-newest-feature-table-of-contents">The newest feature, table of contents</a></li>
</ul>
</li>
<li>
<p><a href="#no-javascript-shall-be-included">No javascript shall be included</a></p>
</li>
<li>
<p><a href="#images-and-its-size">Images and it's size</a></p>
</li>
</ul>
<h2 id="over-engineering-things">Over engineering things</h2>
<p>I was on the state of not knowing what to do, these are the days i was living on dormitory, then some days passed when i realize Arch Wiki's site was a good reference to my blog. It has neat features, some of them are table of contents, categories, etc. I as a bored person, not knowing what to do next, was fired up to implement these features onto my site. And it was a good experience personally, but rather became a bad practice.</p>
<h3 id="working-with-posts-tags">Working with posts tags</h3>
<p>If you haven't noticed, every posts has it's own tags, you can <a href="/posts/tags">check it</a> by clicking the link. I personally happy that i can accomplish this feature, it was a first good feature to implement on this kind of site, a blog. But then, as time flies, now i know that it's just not a good feature to implement if you don't have a specific article to write, like, only writing web development related content. It's always is a pain in the ass to just specify the "name" of a variable in programming, i also has felt it on making these tags. This feature might get deleted soon as i learn from mistakes, to not over engineer something.</p>
<h3 id="the-newest-feature-table-of-contents">The newest feature, table of contents</h3>
<p>There we go, now i can rest back to being a bored person, lmao. I've made this blog like it's a big ass site that's content change overtime. As i mentioned before, this was one of the good feature that i can implement on a blog. For this one, i might just keep it. Cause i'm overall somewhat happy for it, there's one bug that the library remark-toc or remark-html made, it generates <code>&#x3C;p>&#x3C;/p></code> tag in between lists on a certain condition, if the list were nested, that makes the table of contents unconsistent. It actually has some helpful features. But it's optional, no one might not use it, cause again, this site is not a wiki or a big ass company site, who knows. Or am i just overthinking?</p>
<h2 id="no-javascript-shall-be-included">No javascript shall be included</h2>
<p>Even tho this site is built using Typescript, it shouldn't bundle Javascript on build / production version. I don't hate Javascript, i just wanted to reduce the size of this site. Next.js or React itself has some downside on including and excluding Javascript, there should be Javascript or no Javascript at all. You can not have hybrid pages, as far as i know. This one feature has already been implemented using the SSG from Next.js, as i said before, i might build up my own simple SSG using C.</p>
<h2 id="images-and-its-size">Images and it's size</h2>
<p>I've tried optimizing this site's size, after doing some inspection, turns out that images are one of the factor that bloats this site. I probably will gonna remove images for upcoming updates. Might just use pure text and referring images as links.</p>]]></content:encoded>
            <author>lolywk@tutanota.com (youkwhd)</author>
        </item>
        <item>
            <title><![CDATA[What makes a GNU/Linux rice looks good]]></title>
            <link>https://youkwhd.vercel.app/blog/what-makes-a-gnu-linux-rice-looks-good</link>
            <guid>https://youkwhd.vercel.app/blog/what-makes-a-gnu-linux-rice-looks-good</guid>
            <pubDate>Fri, 14 Jan 2022 18:03:14 GMT</pubDate>
            <description><![CDATA[I remembered my first time ricing my Ubuntu using vanilla i3 and eventually switched to i3-gaps that makes things a little bit spicy. but still, my GNU/Linux still feels plain. nothing fancy about it, not even compareable to r/unixporn posts]]></description>
            <content:encoded><![CDATA[<p>I remembered my first time ricing my Ubuntu using vanilla i3 and eventually switched to i3-gaps that makes things a little bit spicy. but still, my GNU/Linux still feels plain. nothing fancy about it, not even compareable to r/unixporn posts.</p>
<h2 id="table-of-contents">Table of contents</h2>
<ul>
<li><a href="#window-managers-doesnt-affect-anything">Window Managers doesn't affect anything</a></li>
<li><a href="#things-that-really-makes-it-perfect">Things that really makes it perfect</a></li>
<li><a href="#add-some-gaps-even-if-its-small">Add some gaps even if it's small</a></li>
<li><a href="#use-colorized-or-plain-wallpapers">Use colorized or plain wallpapers</a></li>
<li><a href="#determine-your-terminal-transparency-and-prompt">Determine your terminal transparency and prompt</a></li>
<li><a href="#x-bar-status">X Bar status</a></li>
<li><a href="#rounded-terminal-shadow-and-outline">Rounded terminal, shadow and outline</a></li>
<li><a href="#keep-the-theme-on-fit">Keep the theme on fit</a></li>
<li><a href="#conclusion">Conclusion</a></li>
</ul>
<h2 id="window-managers-doesnt-affect-anything">Window Managers doesn't affect anything</h2>
<p>Well, i like suckless softwares; dwm, dmenu, st, etc. It suck less, non bloated, then the way it's configured, the patches that is available, and it is widely customizable. What about other Window Managers? they all the same, it's just the programming language that's differ from others, the way it's configured, the maintainer, functionality. But really, when it comes to ricing, it does not matter.</p>
<p>take a look at <a href="https://raw.githubusercontent.com/youkwhd/dotfiles/master/screenshots/wm__screenshot-04.png">my recent gnu/linux rice</a>.</p>
<p>the color scheme matched the wallpaper in the background, st has transparency, then there's big gaps in between. Also, the font matched with the environment.</p>
<blockquote>
<p>here are my <a href="https://github.com/youkwhd/dotfiles">dotfiles</a> configs.</p>
</blockquote>
<p>the fact is that i can make the same layout using i3, i mean the <strong>exact same</strong> as the screenshot above. Now we know that any Window Managers are viable. Use the one that you comfort to use with.</p>
<h2 id="things-that-really-makes-it-perfect">Things that really makes it perfect</h2>
<p>After months of ricing GNU/Linux, now i can share the things i think really makes the difference. These are my thoughts on why some GNU/Linux rice looks bad.</p>
<p>take a look at <a href="https://raw.githubusercontent.com/youkwhd/dotfiles/master/screenshots/wm__screenshot-08.png">my first rice</a>, i was using vanilla i3 at that time.</p>
<p>what do you see? Gruvbox. Nothing but a fullscreen terminal with i3status on top, no gaps, nothing. Straight plain.</p>
<p>what about the color scheme, isn't Gruvbox a good color scheme? yes indeed. I personally like it. But i wouldn't ever again staring at a fullscreen terminal, it just doesn't feel good.</p>
<p>then i switched to i3-gaps, it looks far more better, it is an ok environment. But i don't have any wallpaper installed. As you can guess, there is nothing but a blank black wallpaper and a non-transparent terminal. The result is still as bad.</p>
<p>Note that the font is an ok option in this case. Take a look at the i3status, one icon, then all the number stuff? what does the GiB section even mean? is it how much memory left? what is that? it confuses you. Plus the size of the i3status doesn't fit with the i3-gaps font base.</p>
<p>at that time, i thought i've made my rice to be as perfect as i want. But as time flies, i realize that this is beyond perfect, nothing special.</p>
<h2 id="add-some-gaps-even-if-its-small">Add some gaps even if it's small</h2>
<p>you will feel better if you add gaps. Just, trust me. It's the UI/UX thing. even a little bit of gaps can change the feel, just maybe 5 pixels for each window. I promise your WM will look better and fresh.</p>
<p>take a look at <a href="https://raw.githubusercontent.com/youkwhd/dotfiles/master/screenshots/wm__screenshot-09.png">my i3 config</a> as if it has some gaps:</p>
<p>you've made some progress, and you've successfully made your window manager better.</p>
<h2 id="use-colorized-or-plain-wallpapers">Use colorized or plain wallpapers</h2>
<p>what you will regularly actually see is the background. Really tho, use one that looks super cool and the one that matches your style preferences. In case if you don't like to use wallpapers, you can use any plain wallpaper as an alternative. if you did used a plain wallpaper, you might want to match the terminal background color.</p>
<p>for an example; if i use a plain black wallpaper, then the terminal background saturation should be a little bit higher, still black but has more saturation on it.</p>
<h2 id="determine-your-terminal-transparency-and-prompt">Determine your terminal transparency and prompt</h2>
<p>you can have a non-transparent terminal but under a certain conditions, e.g the terminal background color must be pure black, then add paddings inside the terminal so it'll look more minimalist, or even add a border radius, and you can also put a very standing border color like pure white. Also, consider the prompt (PS1) to be minimal as well. for example:</p>
<pre class="language-bash"><code class="language-bash"><span class="token builtin class-name">export</span> <span class="token assign-left variable"><span class="token environment constant">PS1</span></span><span class="token operator">=</span><span class="token string">"\W > \[<span class="token variable"><span class="token variable">$(</span>tput sgr0<span class="token variable">)</span></span>\]"</span>
</code></pre>
<p>thus will render out:</p>
<pre class="language-bash"><code class="language-bash">~ <span class="token operator">></span> <span class="token builtin class-name">echo</span> <span class="token string">"youkwhd.github.io"</span> 
~ <span class="token operator">></span> yay -S icecat <span class="token function">vim</span>
</code></pre>
<p>here is one of an <a href="https://i.redd.it/kfbpylqmga701.png">example</a>.</p>
<p>the way to configure transparency, shadow, etc. Is to install a compositor for X, e.g. picom, Xcompmgr, Unagi.</p>
<p>in case if you were using cool and cozy wallpapers, then you can do something like a really long prompt, for example:</p>
<pre class="language-bash"><code class="language-bash"><span class="token builtin class-name">export</span> <span class="token assign-left variable"><span class="token environment constant">PS1</span></span><span class="token operator">=</span><span class="token string">"[\u@\h \W]\$ "</span>
</code></pre>
<p>the following prompt would be:</p>
<pre class="language-bash"><code class="language-bash"><span class="token punctuation">[</span>youkwhd@severus ~<span class="token punctuation">]</span>$ <span class="token builtin class-name">echo</span> <span class="token string">"youkwhd.github.io"</span>
<span class="token punctuation">[</span>youkwhd@severus ~<span class="token punctuation">]</span>$ yay -S icecat <span class="token function">vim</span>
</code></pre>
<p>if you chose to use the long-prompt-like one, then i wouldn't have to consider paddings, but it depens on your preferences. Keep experimenting and you'll eventually like it.</p>
<h2 id="x-bar-status">X Bar status</h2>
<p>your window manager bar (i3bar, dwmblocks, etc) are one of the aspect of making a good rice. A messy, gray colored font for X bar will sometimes resulting in a bad X bar, and could even make it worse to read. What you can do is to add some life into it, an example of it is to use emojis as an advantage for you to make your X bar pretty. Or you can even use font-awesome as an alternative.</p>
<h2 id="rounded-terminal-shadow-and-outline">Rounded terminal, shadow and outline</h2>
<p>as mentioned above, adding these can result a nice feel, and make your terminal stands out. Tho it's only an additional option, add what's needed and what suits your style. don't over tweak things.</p>
<p>you can take a reference with these rices:</p>
<ul>
<li><a href="https://external-content.duckduckgo.com/iu/?u=https%3A%2F%2Ftse1.mm.bing.net%2Fth%3Fid%3DOIP.lNVwZzB4na-ibX9MWj-r8gHaEw%26pid%3DApi&#x26;f=1">stand out border</a></li>
<li><a href="https://external-content.duckduckgo.com/iu/?u=https%3A%2F%2Ftse3.mm.bing.net%2Fth%3Fid%3DOIP.ly6Ymz12V-1QgC4_NVgdmgHaEK%26pid%3DApi&#x26;f=1">minimal with outline</a></li>
<li><a href="https://external-content.duckduckgo.com/iu/?u=https%3A%2F%2Ftse2.mm.bing.net%2Fth%3Fid%3DOIP.CwzNbqzfJV_55eRv-B-wEQHaEK%26pid%3DApi&#x26;f=1">rounded</a></li>
</ul>
<h2 id="keep-the-theme-on-fit">Keep the theme on fit</h2>
<p>You can easily generate dynamic color schemes using pywal, any other premade themes like gruvbox, dracula, etc. Is a valid option especially if you are just getting started and wanted a stable color scheme. I don't recommend you to make your own theme / color scheme as a beginner, but rather if you are good at UI/UX or designing things, then go for it.</p>
<h2 id="conclusion">Conclusion</h2>
<p>here comes the conclusion, don't be afraid to change things up, especially for your own good. If you are too afraid to make a mistake, configure a virtual machine, then use it as an experiment GNU/Linux rice, tho you might have more issues with virtual machines, it's still a good alternative way to ricing.</p>
<p>keep your attention to small details like spaces in between windows. When it comes to customizing your GNU/Linux, if you ever feel like it's wonky, re-check if anything doesn't make sense, e.g; your theme doesn't match, or if it's too bright.</p>
<p>happy hacking!</p>]]></content:encoded>
            <author>lolywk@tutanota.com (youkwhd)</author>
        </item>
    </channel>
</rss>